const mongoose = require('mongoose');
require('dotenv').config();

async function fixConversationIndex() {
    try {
        // K·∫øt n·ªëi MongoDB
        await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/dien_dan_TVU');
        console.log('‚úÖ Connected to MongoDB');

        const db = mongoose.connection.db;
        const conversationsCollection = db.collection('conversations');

        // Li·ªát k√™ t·∫•t c·∫£ indexes
        const indexes = await conversationsCollection.indexes();
        console.log('üìã Current indexes:', indexes.map(idx => idx.name));

        // X√≥a index c≈© n·∫øu t·ªìn t·∫°i
        try {
            await conversationsCollection.dropIndex('participants_1_type_1');
            console.log('‚úÖ Dropped old index: participants_1_type_1');
        } catch (error) {
            console.log('‚ÑπÔ∏è Index participants_1_type_1 not found (already dropped)');
        }

        // X√≥a t·∫•t c·∫£ conversations ƒë·ªÉ tr√°nh conflict
        const deleteResult = await conversationsCollection.deleteMany({});
        console.log(`‚úÖ Deleted ${deleteResult.deletedCount} existing conversations`);

        console.log('üéâ Index fix completed successfully!');
        console.log('‚ÑπÔ∏è New index will be created automatically by Mongoose when server starts');

    } catch (error) {
        console.error('‚ùå Error fixing index:', error);
    } finally {
        await mongoose.disconnect();
        console.log('‚úÖ Disconnected from MongoDB');
    }
}

// Ch·∫°y script
fixConversationIndex();
